# library chart values are purely for documentation purposes

argoconfig:
  application:
    - name: chromadb
      enabled: true
      spec:
        project: default
        source:
          repoURL: 'https://amikos-tech.github.io/chromadb-chart/'
          targetRevision: 0.1.24
          helm:
            values: |-
              ingress:
                enabled: true
                className: "cilium"
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                  - host: chromadb.homelab
                    paths:
                      - path: /
                        pathType: Prefix
                tls:
                  - secretName: chromadb-tls
                    hosts:
                      - chromadb.homelab

          chart: chromadb
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: chromadb
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: anythingllm
      enabled: false
      spec:
        project: default
        source:
          repoURL: 'https://la-cc.github.io/anything-llm-helm-chart'
          targetRevision: 1.1.4
          helm:
            values: |-
              config:
                STORAGE_DIR: "/app/server/storage"
                # -- Configuration for the embedding model.
                EMBEDDING_MODEL_PREF: "nomic-embed-text:1.5"
                EMBEDDING_MODEL_MAX_CHUNK_LENGTH: "8192"
                # -- Configuration for the vector db like lanceDB (in storage) or chroma DB (external), etc.
                VECTOR_DB: chroma
                CHROMA_ENDPOINT: http://chromadb.chromadb.svc.cluster.local:8000
                WHISPER_PROVIDER: "local"
                TTS_PROVIDER: "native"
                # -- Configuration for LLM provider like ollama, azure openai, etc.
                LLM_PROVIDER: 'ollama'
                OLLAMA_BASE_PATH: 'http://ollama.ollama.svc.cluster.local:11434'
                OLLAMA_MODEL_PREF: 'mistral'
                OLLAMA_MODEL_TOKEN_LIMIT: 8192
                EMBEDDING_BASE_PATH: 'http://ollama.ollama.svc.cluster.local:11434'
              ingress:
                enabled: true
                ingressClassName: "cilium"
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                  - host: anythingllm.homelab
                    paths:
                      - path: /
                        pathType: Prefix
                tls:
                  - secretName: anythingllm-tls
                    hosts:
                      - anythingllm.homelab
          chart: anything-llm
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: anythingllm
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: openwebui
      enabled: false
      spec:
        project: default
        source:
          repoURL: 'https://helm.openwebui.com/'
          targetRevision: 6.22.0
          helm:
            values: |-
              ollamaUrls:
                - http://ollama.ollama.svc.cluster.local:11434
              ingress:
                enabled: true
                class: "cilium"
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                host: "open-webui.homelab"
                tls: true
                existingSecret: open-webui-tls

          chart: open-webui
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: openwebui
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: ollama
      enabled: true
      spec:
        project: default
        source:
          repoURL: 'https://helm.otwld.com/'
          targetRevision: 1.24.0
          helm:
            values: |-
              ollama:
                models:
                  pull:
                    - llama2
                    - mistral
              ingress:
                enabled: true
                className: "cilium"
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                  nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
                  nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
                  nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
                  cilium.io/proxy-timeout-seconds: "600"
                hosts:
                    - host: ollama.homelab
                      paths:
                        - path: /
                          pathType: Prefix
                tls:
                  - secretName: ollama-tls
                    hosts:
                      - ollama.homelab                     
          chart: ollama
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: ollama
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: code-server
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://github.com/coder/code-server
          path: ci/helm-chart
          targetRevision: v4.101.2
          helm:
            values: |-
              existingSecret: code-password
              ingress:
                enabled: true
                ingressClassName: cilium
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                  - host: code.homelab
                    paths:
                      - /
                tls: 
                  - secretName: code-tls
                    hosts:
                      - code.homelab
              extraVolumeMounts:
                - name: extra-volume
                  mountPath: /mnt/homelab-charts
                  readOnly: false
                  hostPath: /home/homelab/GitHub/homelab-charts
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: code
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: uptimekuma
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://helm.irsigler.cloud
          targetRevision: 2.21.3
          helm:
            values: |-
              ingress:
                enabled: true
                className: cilium
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                  - host: kuma.homelab
                    paths:
                      - path: "/"
                        pathType: Prefix
                tls: 
                  - secretName: kuma-tls
                    hosts:
                      - kuma.homelab
          chart: uptime-kuma
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: uptimekuma
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: openspeedtest
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://openspeedtest.github.io/Helm-chart/
          targetRevision: 0.1.2
          helm:
            values: |-
              ingress:
                enabled: true
                className: "cilium"
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                  - host: openspeedtest.homelab
                    paths:
                      - path: "/"
                        pathType: Prefix
                tls: 
                  - secretName: openspeedtest-tls
                    hosts:
                      - openspeedtest.homelab
          chart: openspeedtest
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: openspeedtest
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: vector
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://helm.vector.dev
          targetRevision: 0.43.0
          helm:
            values: |-
              containerPorts:
                - name: http
                  containerPort: 8080
                - name: syslog
                  containerPort: 9000
                  protocol: UDP
              service:
                enabled: true
                type: "NodePort"
                ports:
                  - name: http
                    port: 8080
                    targetPort: 8080
                  - name: syslog
                    port: 9000
                    protocol: UDP
                    nodePort: 30000
              serviceHeadless:
                enabled: false
              customConfig:
                sources:
                  syslog_in:
                    type: syslog
                    address: 0.0.0.0:9000
                    mode: udp
                    host_key: syslog_host
                  fluentbit_in:
                    type: http
                    address: 0.0.0.0:8080
                    encoding: json
                transforms:
                  parse_syslog_cef:
                    type: remap
                    inputs:
                      - syslog_in
                    source: |
                      pattern = r'^CEF:(?P<version>\d+)\|(?P<device_vendor>[^|]*)\|(?P<device_product>[^|]*)\|(?P<device_version>[^|]*)\|(?P<signature_id>[^|]*)\|(?P<name>[^|]*)\|(?P<severity>[^|]*)\|(?P<kvpairs>.*)'
                      parts = parse_regex!(.message, pattern)

                      .timestamp = now()
                      if is_null(parts) {
                          .job = "syslog"
                          .source_type = "syslog"
                          .host = if exists(.syslog_host) {
                            .syslog_host
                          } else {
                            "unknown"
                          }
                      } else {
                          .job = "syslog"
                          .source_type = "CEF"
                          .version = parts.version
                          .device_vendor = parts.device_vendor
                          .device_product = parts.device_product
                          .device_version = parts.device_version
                          .signature_id = parts.signature_id
                          .name = parts.name
                          .severity = parts.severity

                          .host = if exists(.syslog_host) {
                              .syslog_host
                          } else if exists(.device_product) {
                              .device_product
                          } else {
                              "unknown"
                          }

                          # Avoid .host being set to timestamp accidentally
                          if match(to_string!(.host), r'^\d{4}-\d{2}-\d{2}T') {
                              .host = "unknown"
                          }

                          kv_pairs = split(parts.kvpairs, " ")
                          for_each(kv_pairs) -> |_, kv| {
                            kv_split = split(kv, "=")
                            if length(kv_split) == 2 {
                                key = kv_split[0]
                                value = kv_split[1]
                                . = set!(., [key], value)
                            }
                          }
                      }
                  ensure_host:
                    type: remap
                    inputs:
                      - fluentbit_in
                    source: |
                      .job = "fluentbit"
                      .source_type = "fluentbit"
                      .host = if exists(.kubernetes.namespace_name ) {
                        .kubernetes.namespace_name
                      } else if exists(.host) {
                        .host
                      } else if exists(.hostname) {
                        .hostname
                      } else {
                        "unknown"
                      }
                sinks:
                  loki_out:
                    type: loki
                    inputs:
                      - ensure_host      
                      - parse_syslog_cef
                    endpoint: http://loki-loki-distributed-distributor.loki.svc.cluster.local:3100
                    encoding:
                      codec: json
                    labels:
                      job: "{{`{{ job }}`}}"
                      host: "{{`{{ host }}`}}"
                      source: "{{`{{ source_type }}`}}"
                    remove_label_fields: true
                    remove_timestamp: false
          chart: vector
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: vector
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: nextcloud
      enabled: false
      spec:
        project: default
        source:
          repoURL: https://nextcloud.github.io/helm/
          targetRevision: 6.5.2
          helm:
            values: |-
            
          chart: nextcloud
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: nextcloud
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: portainer
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://portainer.github.io/k8s/
          targetRevision: 1.0.58
          helm:
            values: |-
              enterpriseEdition: 
                enabled: true
                image:
                  repository: portainer/portainer-ee
                  tag: 2.27.1
                  pullPolicy: Always
              ingress:
                enabled: true
                ingressClassName: cilium
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                  - host: portainer.homelab
                    paths:
                      - path: "/"
                tls: 
                  - secretName: portainer-tls
                    hosts:
                      - portainer.homelab

          chart: portainer
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: portainer
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: pihole
      enabled: true 
      spec:
        project: default
        source: 
          repoURL: https://mojo2600.github.io/pihole-kubernetes
          targetRevision: 2.31.0
          chart: pihole
          helm:
            values: |-
              extraEnvVars:
                PIHOLE_UID: 3005
                PIHOLE_GID: 3003
              admin:
                enabled: true
                existingSecret: pihole-password
                passwordKey: "password"
              virtualHost: pihole.homelab
              DNS1: "1.1.1.1"
              DNS2: "1.0.0.1"
              serviceDns:
                annotations:             
                  io.cilium/lb-ipam-ips: 192.168.5.102
                  io.cilium/lb-ipam-sharing-key: pi-hole
                type: LoadBalancer
              serviceDhcp:
                annotations:             
                  io.cilium/lb-ipam-ips: 192.168.5.102
                  io.cilium/lb-ipam-sharing-key: pi-hole
                type: LoadBalancer
              serviceWeb:
                annotations:             
                  io.cilium/lb-ipam-ips: 192.168.5.102
                  io.cilium/lb-ipam-sharing-key: pi-hole
                http:
                  enabled: true
                https:
                  enabled: true
                type: LoadBalancer
              ingress:
                enabled: false
                ingressClassName: cilium
                annotations:
                  ingress.cilium.io/loadbalancer-mode: dedicated
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                  - pihole.homelab
                path: /
                pathType: Prefix
                tls: 
                  - secretName: pihole-tls
                    hosts:
                      - pihole.homelab
              dnsmasq:
                additionalDnsEntries:
                  - address=/pihole.homelab/192.168.5.102
                  - address=/pihole.pi/192.168.3.2
                additionalHostsEntries:
                  - 127.0.0.1 pihole.homelab
              persistentVolumeClaim:
                enabled: true
                existingClaim: pihole-pvc
              extraVolumes:
                custom-dnsmasq-dir:
                  persistentVolumeClaim:
                    claimName: pihole-dnsmasq-pvc
              extraVolumeMounts:
                custom-dnsmasq-dir:
                  mountPath: /etc/dnsmasq.d   
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: pihole
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: fluentbit
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://fluent.github.io/helm-charts
          targetRevision: 0.49.0
          helm:
            values: |-
              ## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/configuration-file
              config:
                service: |
                  [SERVICE]
                      Daemon Off
                      Flush {{ .Values.flush }}
                      Log_Level {{ .Values.logLevel }}
                      Parsers_File /fluent-bit/etc/parsers.conf
                      Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
                      HTTP_Server On
                      HTTP_Listen 0.0.0.0
                      HTTP_Port {{ .Values.metricsPort }}
                      Health_Check On

                ## https://docs.fluentbit.io/manual/pipeline/inputs
                inputs: |
                  [INPUT]
                      Name tail
                      Path /var/log/containers/*.log
                      multiline.parser docker, cri
                      Tag kube.*
                      Mem_Buf_Limit 5MB
                      Skip_Long_Lines On

                  [INPUT]
                      Name systemd
                      Tag host.*
                      Systemd_Filter _SYSTEMD_UNIT=kubelet.service
                      Read_From_Tail On

                ## https://docs.fluentbit.io/manual/pipeline/filters
                filters: |
                  [FILTER]
                      Name kubernetes
                      Match kube.*
                      Merge_Log On
                      Keep_Log Off
                      K8S-Logging.Parser On
                      K8S-Logging.Exclude On

                ## https://docs.fluentbit.io/manual/pipeline/outputs
                outputs: |
                  [OUTPUT]
                      Name            http
                      Match           *
                      Host            vector.vector.svc.cluster.local
                      Port            8080
                      URI             /
                      Format          json
                      Json_date_key   timestamp
                      Json_date_format iso8601
                      Header          Content-Type application/json
          chart: fluent-bit
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: fluent
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: cloudnative-pg-operator
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://cloudnative-pg.github.io/charts
          targetRevision: 0.23.2
          chart: cloudnative-pg
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: cnpg-system
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: immich
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://immich-app.github.io/immich-charts
          targetRevision: 0.9.1
          helm:
            values: |-
              env:
                DB_HOSTNAME:
                  secretKeyRef:
                    name: immich-postgres-user
                    key: host
                DB_USERNAME:
                  secretKeyRef:
                    name: immich-postgres-user
                    key: username
                DB_DATABASE_NAME:
                  secretKeyRef:
                    name: immich-postgres-user
                    key: dbname
                DB_PASSWORD:
                  secretKeyRef:
                    name: immich-postgres-user
                    key: password
              image:
                tag: v1.135.3
              immich:
                metrics:
                  enabled: true
                persistence:
                  library:
                    existingClaim: immich-pvc
              postgresql:
                enabled: false
                primary:
                  resources:
                    requests:
                      cpu: 200m
                      memory: 512Mi
                    limits:
                      cpu: 400m
                      memory: 1024Mi
              redis:
                enabled: true
              server:
                enabled: true
                image:
                  repository: ghcr.io/immich-app/immich-server
                  pullPolicy: IfNotPresent
                ingress:
                  main:
                    enabled: true
                    ingressClassName: "cilium"
                    annotations:
                      ingress.cilium.io/loadbalancer-mode: shared
                      cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                    hosts:
                      - host: immich.homelab
                        paths:
                          - path: "/"
                    tls: 
                      - secretName: immich-tls
                        hosts:
                          - immich.homelab
          chart: immich
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: immich
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: opensearch-dashboards
      enabled: false
      spec:
        project: default
        source:
          repoURL: https://opensearch-project.github.io/helm-charts
          targetRevision: 2.28.0
          helm:
            values: |-
              ingress:
                enabled: true
                ingressClassName: "cilium"
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                    - host: opensearch-dash.homelab
                      paths:
                        - path: /
                          backend:
                            serviceName: ""
                            servicePort: ""
                tls:
                  - secretName: opensearch-dash-tls
                    hosts:
                      - opensearch-dash.homelab
          chart: opensearch-dashboards
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: opensearch
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: opensearch
      enabled: false
      spec:
        project: default
        source:
          repoURL: https://opensearch-project.github.io/helm-charts
          targetRevision: 2.32.0
          helm:
            values: |-
              config:
                opensearch.yml: |
                  cluster.name: opensearch-cluster

                  # Bind to all interfaces because we don't know what IP address Docker will assign to us.
                  network.host: 0.0.0.0

                  # Setting network.host to a non-loopback address enables the annoying bootstrap checks. "Single-node" mode disables them again.
                  # Implicitly done if ".singleNode" is set to "true".
                  # discovery.type: single-node

                  # Start OpenSearch Security Demo Configuration
                  # WARNING: revise all the lines below before you go into production
                  
              persistence:
                enabled: false
              singleNode: true
              extraEnvs: 
                - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
                  value: Th1s1sS3cure
              ingress:
                enabled: true
                ingressClassName: "cilium"
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                path: /
                hosts:
                    - opensearch.homelab
                tls:
                  - secretName: opensearch-tls
                    hosts:
                      - opensearch.homelab
          chart: opensearch
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: opensearch
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: hivemq-mqtt-platform
      enabled: false
      spec:
        project: default
        source:
          repoURL: https://hivemq.github.io/helm-charts
          targetRevision: 0.2.21
          helm:
            values: |-
              replicaCount: 1
          chart: hivemq-platform
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: hivemq
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: hivemq-mqtt-operator
      enabled: false
      spec:
        project: default
        source:
          repoURL: https://hivemq.github.io/helm-charts
          targetRevision: 0.2.9
          helm:
            values: |-
              replicaCount: 1
                
          chart: hivemq-platform-operator
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: hivemq
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: homeassistant
      enabled: true
      spec:
        project: default
        source:
          repoURL: 'https://pajikos.github.io/home-assistant-helm-chart'
          targetRevision: 0.3.10
          helm:
            values: |-
              ingress:
                # Enable ingress for home assistant
                enabled: true
                className: "cilium"
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                    - host: homeassistant.homelab
                      paths:
                        - path: /
                          pathType: Prefix
                tls:
                  - secretName: homeassistant-tls
                    hosts:
                      - homeassistant.homelab

              configuration:
                enabled: true
                forceInit: false
                trusted_proxies:
                  - 10.0.0.0/8
                  - 192.0.0.0/8

              persistence:
                enabled: true
                size: "10Gi"
                existingVolume: homeassistant-pv-volume

          chart: home-assistant
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: homeassistant
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: vaultwarden
      enabled: true
      spec:
        project: default
        source:
          repoURL: 'https://github.com/paimonsoror/vaultwarden.git'
          targetRevision: main
          path: charts/vaultwarden
          helm:
            values: |-
              domain: "https://vaultwarden.homelab"
              storage:
                existingVolumeClaim: 
                  claimName: vaultwarden-pvc
              ingress:
                enabled: true
                class: cilium
                additionalAnnotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hostname: vaultwarden.homelab
                tlsSecret: vaultwarden-tls
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: vaultwarden
        syncPolicy:
          syncOptions:
            - CreateNamespace=true
    - name: prom-push-gateway
      enabled: true
      spec:
        project: default
        source:
          repoURL: 'https://prometheus-community.github.io/helm-charts'
          targetRevision: 2.15.0
          helm:
            values: |-
              ingress:
                enabled: true
                className: cilium
                pathType: Prefix
                annotations:
                  ingress.cilium.io/loadbalancer-mode: shared
                  cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                hosts:
                  - prompushgtwy.homelab
                tls:
                  - secretName: prompush-tls
                    hosts:
                      - prompushgtwy.homelab
          chart: prometheus-pushgateway
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: prometheus
        syncPolicy:
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
    - name: loki
      enabled: true
      spec:
        project: default
        source:
          repoURL: https://grafana.github.io/helm-charts
          targetRevision: 0.80.2
          helm:
            values: |-
              loki:
                structuredConfig:
                  limits_config:
                    enforce_metric_name: false
                    reject_old_samples: true
                    reject_old_samples_max_age: 168h
                    max_cache_freshness_per_query: 10m
                    split_queries_by_interval: 15m
                    ingestion_rate_mb: 4
                    ingestion_burst_size_mb: 6
                    max_streams_per_user: 10000
                    retention_period: 168h
                    volume_enabled: true
                schemaConfig:
                  configs:
                    - from: 2024-01-01
                      store: boltdb-shipper
                      object_store: filesystem
                      schema: v11
                      index:
                        prefix: index_
                        period: 24h

                storage:
                  type: filesystem
                  filesystem:
                    directory: /var/loki/chunks

                compactor:  
                  working_directory: /var/loki
                  sharedStore: filesystem
              compactor:
                enabled: true
                persistence:
                  enabled: true
                  size: 5Gi
                  storageClass: local-path
              querier:
                persistence:
                  enabled: true
                  size: 5Gi
                  storageClass: local-path
              serviceMonitor:
                enabled: true
                labels:
                  release: prometheus
              ingester:
                replicas: 1
                persistence:
                  enabled: true
                  size: 10Gi
                  storageClass: local-path
              gateway:
                enabled: true
                ingress:
                  enabled: true
                  ingressClassName: cilium
                  annotations:
                    ingress.cilium.io/loadbalancer-mode: shared
                    cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                  hosts:
                    - host: loki.gateway.homelab
                      paths:
                        - path: /
                          pathType: Prefix
                  tls:
                    - secretName: loki-gateway-tls
                      hosts:
                        - loki.gateway.homelab
          chart: loki-distributed
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: loki
        syncPolicy:
          automated: {}
          syncOptions:
            - CreateNamespace=true
    - name: prometheus
      enabled: true
      spec:
        project: default
        source:
          repoURL: 'https://prometheus-community.github.io/helm-charts'
          targetRevision: 75.9.0
          helm:
            values: |-
              prometheus:
                enabled: true
                prometheusSpec:
                  serviceMonitorSelectorNilUsesHelmValues: false
                  additionalScrapeConfigs:
                    - job_name: "netdata-exporter"
                      metrics_path: '/api/v1/allmetrics'
                      params:
                        # format: prometheus | prometheus_all_hosts
                        # You can use `prometheus_all_hosts` if you want Prometheus to set the `instance` to your hostname instead of IP 
                        format: [ prometheus ]
                        #
                        # sources: as-collected | raw | average | sum | volume
                        # default is: average
                        #source: [as-collected]
                        #
                        # server name for this prometheus - the default is the client IP
                        # for Netdata to uniquely identify it
                        #server: ['prometheus1']
                      honor_labels: true

                      static_configs:
                        - targets: [ 'truenas.homelab:20489' ]
              grafana:
                enabled: true
                ingress:
                  enabled: true
                  ingressClassName: cilium
                  annotations:
                    ingress.cilium.io/loadbalancer-mode: shared
                    cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
                  hosts:
                    - grafana.homelab
                  tls:
                    - secretName: grafana-tls
                      hosts:
                        - grafana.homelab
                persistence:
                  enabled: true
                  type: sts
                  storageClassName: local-path
                  accessModes:
                    - ReadWriteOnce
                  size: 20Gi
                  finalizers:
                    - kubernetes.io/pvc-protection
          chart: kube-prometheus-stack
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: prometheus
        syncPolicy:
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true
